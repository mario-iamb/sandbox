@mixin v-hidden {
    left: -9999px;
    position: absolute;
  }
  
  @mixin hover-active-focus {
    &:focus,
    &:hover,
    &:active {
      @content;
    }
  }
  
  @mixin reset-link($reset-hover: false) {
    color: inherit;
    text-decoration: none;
  
    @if $reset-hover == true {
      @include hover-active-focus {
        @include reset-link-hover;
      }
    }
  }
  
  @mixin reset-link-hover {
    color: inherit;
    text-decoration: none;
  }
  
  @mixin reset-button {
    appearance: none;
    background-color: transparent;
    border: none;
    cursor: pointer;
    display: inline-block;
    padding: 0;
    vertical-align: top;
  
    &:focus {
      outline: 0;
    }
  }
  
  @mixin reset_input {
    appearance: none;
    background: none;
    border: 0;
    box-sizing: content-box;
    display: inline-block;
    line-height: 1;
    margin: 0;
    padding: 0;
    vertical-align: middle;
    white-space: normal;
  
    &:focus {
      outline: 0;
    }
  }
  
  @mixin list-setup {
    padding-left: rem(36px - 24px);
  
    @include media('>=md') {
      padding-left: rem(60px - 24px);
    }
  
    li {
      margin-bottom: rem($spacer-v-small);
      position: relative;
  
      &:last-child {
        margin-bottom: 0;
      }
  
      &:before {
        content: '';
        display: block;
        left: 0;
        position: absolute;
        top: 0;
      }
    }
  
    li {
      padding-left: rem(24px);
    }
  }
  
  @mixin ul {
    @include list-setup;
  
    li {
      &:before {
        background-color: $purple;
        border-radius: 100%;
        height: rem(4px);
        top: rem(10px);
        width: rem(4px);
      }
    }
  }
  
  @mixin ol {
    @include list-setup;
    counter-reset: ordered-list;
  
    li {
      &:before {
        @include t-medium;
        @include t-16-24;
        color: $purple;
        content: counters(ordered-list, '.') '.';
        counter-increment: ordered-list;
      }
    }
  }
  
  @mixin quote {
    text-align: center;
  
    &:before {
      background: transparent url('../images/icons/quote.svg') top center no-repeat;
      content: '';
      display: block;
      height: rem(26px);
      margin-bottom: rem($spacer-tiny);
    }
  
    > p {
      @include t-quote;
      margin-bottom: rem($spacer-v-small);
    }
  
    > *:last-child {
      margin-bottom: 0;
    }
  }
  
  @mixin quote-attribution {
    @include t-label;
    color: $c-light;
    display: block;
    margin-bottom: 0;
  }
  
  @mixin intro {
    @include media('<lg') {
      @include t-intro;
    }
  
    @include media('>=lg') {
      @include t-intro-lg;
    }
  }
  
  @mixin generic-spacing {
    margin-bottom: rem($spacer-huge);
  }
  
  @mixin remove-generic-spacing {
    margin-bottom: 0;
  
    @include media('>=lg') {
      margin-bottom: 0;
    }
  }
  
  @mixin break-container($container-padding: $container-padding) {
    left: rem(-$container-padding);
    overflow: hidden;
    position: relative;
    width: calc(100% + #{rem($container-padding + $container-padding)});
  }
  
  @mixin cta-hover($prefix: '.cta-button', $color: $c-primary, $hover-color: $c-secondary, $include-root: true) {
    @if $include-root {
      #{$prefix} {
        border-bottom: 1px solid $hover-color;
        outline: none;
      }
    }
  
    @else {
      border-bottom: 1px solid $hover-color;
      outline: none;
    }
  
    #{$prefix}__text {
      color: $hover-color;
    }
  
    #{$prefix}__icon path {
      fill: $hover-color;
    }
  }
  
  @mixin cta($prefix: '.cta-button', $color: $blue, $hover-color: $blue) {
    #{$prefix} {
      @include reset-button;
      @include reset-link(true);
      align-items: center;
      cursor: pointer;
      display: inline-flex;
      font-size: 0;
  
      @content;
  
      @include hover-active-focus {
        @include cta-hover($prefix, $color, $hover-color, $include-root: false);
      }
  
      &--back {
        flex-direction: row-reverse;
  
        #{$prefix}__text {
          margin-left: rem(4px);
          margin-right: 0;
        }
  
        #{$prefix}__icon {
          left: rem(-2px);
          right: auto;
          transform: rotate(.5turn);
        }
      }
  
      &--show-hide {
        &:focus,
        &:active {
          border-bottom-color: $color;
  
          #{$prefix}__text {
            color: $color;
          }
  
          #{$prefix}__icon path {
            fill: $color;
          }
        }
  
        &:hover {
          @include cta-hover($prefix, $color, $hover-color, $include-root: false);
        }
  
        #{$prefix}__text--hide,
        #{$prefix}__icon--hide {
          display: none;
        }
      }
  
      &--show-hide--active {
        #{$prefix}__text--hide,
        #{$prefix}__icon--hide {
          display: block;
        }
  
        #{$prefix}__text--show,
        #{$prefix}__icon--show {
          display: none;
        }
      }
    }
  
    #{$prefix}__text {
      @include t-cta;
      margin-right: rem(4px);
    }
  
    #{$prefix}__icon {
      position: relative;
      right: rem(-2px);
      top: 1px;
      width: rem(10px);
  
      path {
        fill: $color;
      }
    }
  }
  
  @mixin generate-spacer-classes($spacers, $prefix, $name: null) {
    @each $spacer, $value in $spacers {
      @if $name {
        .#{$prefix}-#{$name}-#{$spacer} {
          margin-bottom: rem($value);
        }
      }
  
      @else {
        .#{$prefix}-#{$spacer} {
          margin-bottom: rem($value);
        }
      }
    }
  }
  
  @mixin generate-spacers($prefix: 'spacer', $spacers: $spacers, $breakpoints: $spacer-breakpoints) {
    @each $breakpoint in $breakpoints {
      $name: map-get($breakpoint, name);
      $mq: map-get($breakpoint, mq);
  
      @if $mq {
        @include media($mq...) {
          @include generate-spacer-classes($spacers, $prefix, $name);
        }
      }
  
      @else {
        @each $spacer, $value in $spacers {
          @include generate-spacer-classes($spacers, $prefix, $name);
        }
      }
    }
  }
  
  @mixin table {
    border: 1px solid $c-alto;
    width: 100%;
  }
  
  @mixin table-cell {
    @include t-14-24;
    border: 1px solid $c-alto;
    padding: rem(16px) rem(14px) rem(15px);
    text-align: left;
  }
  
  @mixin table-header {
    @include t-regular;
    background-color: $c-bg-alabaster;
  }
  
  @mixin table-row-alt-col {
    background-color: $c-bg-alabaster;
  }
  
  @mixin button-style {
    @include reset-button;
    @include t-button;
    background-color: $c-primary;
    color: $c-white;
    padding: rem(8px) rem(24px);
    text-decoration: none;
  
    @include hover-active-focus {
      background-color: $c-secondary;
      color: $c-white;
      text-decoration: none;
    }
  }
  